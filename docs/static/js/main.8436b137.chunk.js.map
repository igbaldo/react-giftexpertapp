{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categs","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAQ,IACzBR,GAAe,SAAAS,GAAM,OAAKP,GAAL,mBAAoBO,OACzCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,sBAAKc,UAAU,uBAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCHJO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECFwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVIC,qBAAU,WACNxB,EAASC,GACJwB,MAAM,SAAAC,GACHH,EAAS,CACDf,KAAMkB,EACNL,SAAS,SAGtB,CAAEpB,IAENqB,EDfyBK,CAAc1B,GAAjCa,EAAb,EAAON,KAAca,EAArB,EAAqBA,QAErB,OACI,eAAC,WAAD,WACI,oBAAIJ,UAAU,kBAAd,SAAiChB,IAEhCoB,GAAW,mBAAGJ,UAAU,kBAAb,qBAEZ,qBAAKA,UAAU,4BAAf,SAEYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,aEd7BgB,EAAe,WAIxB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAOA,OACI,gCACI,gDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAYA,GADNA,YCtBlC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.8436b137.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length >2 ){\r\n            setCategories( categs => [inputValue, ...categs] );\r\n            setInputValue('');\r\n        }\r\n\r\n        // console.log('Submit hecho')    \r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=CX4isLsoGArqfvRx9MSp0e2M29WoISRK`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__fadeIn\">\r\n            <img src={ url } alt={ title }></img>\r\n            <p>{ title }</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, {Fragment} from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data: images, loading} = useFetchGifs( category );\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3 className=\"animate__fadeIn\">{category}</h3>\r\n\r\n            {loading && <p className=\"animate__bounce\">Loading</p>}\r\n\r\n            <div className=\"card-grid animate__fadeIn\">              \r\n                    {\r\n                        images.map( img => (\r\n                            <GifGridItem \r\n                                key={ img.id }\r\n                                { ...img }>\r\n\r\n                            </GifGridItem>\r\n                        ))\r\n                    }              \r\n            </div>\r\n        </Fragment>       \r\n    )\r\n}\r\n","import { useState } from \"react\";\r\nimport {useEffect} from 'react';\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true\r\n    })\r\n\r\n        useEffect(() => {\r\n            getGifs( category )\r\n                .then( imgs => {              \r\n                    setstate({\r\n                            data: imgs,\r\n                            loading: false\r\n                        })\r\n                });\r\n            }, [ category ])\r\n\r\n    return state; // {data , loading}\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch', 'Dragon Ball', 'One Piece']\r\n\r\n    const [categories, setCategories] = useState(['One Piece']);\r\n\r\n    // const handleAdd = (e) => { \r\n    //     // setCategories( [...categories, 'HunterXHunter'] );\r\n    //     setCategories( categs => [...categories, 'HunterXHunter'] );\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h2> GifExpertApp </h2>\r\n            <AddCategory setCategories= {setCategories} />\r\n            <hr/>\r\n\r\n            {/* <button onClick={ handleAdd }>Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category=> \r\n                        <GifGrid \r\n                            key= {category}\r\n                            category = {category} >\r\n                        </GifGrid>\r\n                    )\r\n                }\r\n            </ol>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from \"./GifExpertApp\";\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}